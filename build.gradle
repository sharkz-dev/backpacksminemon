plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	mavenCentral()
	maven {
		name = 'Fabric'
		url = 'https://maven.fabricmc.net/'
	}
	// LuckPerms repository
	maven {
		name = 'LuckPerms'
		url = 'https://repo.luckperms.net/'
	}
}

loom {
	splitEnvironmentSourceSets()

	mods {
		backpacks {
			sourceSet sourceSets.main
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// MongoDB driver
	implementation "org.mongodb:mongodb-driver-sync:4.11.1"

	// Gson for JSON handling
	implementation "com.google.code.gson:gson:2.10.1"

	// LuckPerms API - CORREGIDO para usar la versiÃ³n exacta
	compileOnly 'net.luckperms:api:5.4'

	// OPCIONAL: Si quieres que funcione sin LuckPerms instalado, usa modCompileOnly en lugar de compileOnly
	// modCompileOnly 'net.luckperms:api:5.4'

	// Include dependencies in the jar
	include "org.mongodb:mongodb-driver-sync:4.11.1"
	include "org.mongodb:bson:4.11.1"
	include "org.mongodb:mongodb-driver-core:4.11.1"
	include "com.google.code.gson:gson:2.10.1"

	// NO incluir LuckPerms API en el JAR - debe ser proporcionado por el servidor
	// include "net.luckperms:api:5.4" // COMENTADO INTENCIONALMENTE
}

processResources {
	inputs.property "version", project.version
	inputs.property "minecraft_version", project.minecraft_version
	inputs.property "loader_version", project.loader_version
	filteringCharset "UTF-8"

	filesMatching("fabric.mod.json") {
		expand "version": project.version,
				"minecraft_version": project.minecraft_version,
				"loader_version": project.loader_version
	}
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
		it.options.release = targetJavaVersion
	}
}

java {
	def javaVersion = JavaVersion.toVersion(targetJavaVersion)
	if (JavaVersion.current() < javaVersion) {
		toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
	}
	archivesBaseName = project.archives_base_name
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		maven(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// downloading dependencies.
	}
}